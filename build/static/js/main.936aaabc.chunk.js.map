{"version":3,"sources":["weatherDescription.js","App.js","index.js"],"names":["WeatherDescription","props","className","weatherCityName","weatherCountry","weatherDate","weather","weatherTemp","weatherAPI","App","temperatureK","useState","cityName","setCityName","setWeather","a","fetch","response","console","log","status","statusText","json","data","alert","class","type","placeholder","onChange","e","target","value","onClick","fetchWeather","main","temp","Math","round","d","day","getDay","date","getDate","month","getMonth","year","getFullYear","buildDate","Date","name","sys","country","ReactDOM","render","document","getElementById"],"mappings":"yPAUe,SAASA,EAAmBC,GACzC,OACE,sBAAKC,UAAU,cAAf,UACE,sBAAKA,UAAU,WAAf,UACGD,EAAME,gBADT,KAC4BF,EAAMG,kBAElC,qBAAKF,UAAU,OAAf,SAAuBD,EAAMI,cAC7B,gCACE,qBAAKH,UAAU,iBAAf,SACE,sBAAKA,UAAU,cAAf,UACoB,UAAjBD,EAAMK,SAEc,QAAjBL,EAAMK,QADR,cAAC,IAAD,IAGmB,QAAjBL,EAAMK,QACR,cAAC,IAAD,IACmB,SAAjBL,EAAMK,QACR,cAAC,IAAD,IACmB,QAAjBL,EAAMK,QACR,cAAC,IAAD,IAEA,cAAC,IAAD,IAEF,qBAAKJ,UAAU,UAAf,SAA0BD,EAAMK,eAIpC,sBAAKJ,UAAU,OAAf,UAAuBD,EAAMM,YAA7B,iBClCR,IAAMC,EACC,mCAGQ,SAASC,IACtB,IAmE+BC,EAnC/B,EAAgCC,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KAEA,EAA8BF,mBAAS,IAAvC,mBAAOL,EAAP,KAAgBQ,EAAhB,KAnC4B,4CA8C5B,8BAAAC,EAAA,sEACuBC,MAAM,qDAAD,OAC6BJ,EAD7B,kBAC+CJ,IAF3E,UACMS,EADN,OAKEC,QAAQC,IAAIF,EAASG,QACrBF,QAAQC,IAAIF,EAASI,YAEG,MAApBJ,EAASG,OARf,6BASIF,QATJ,SASsBD,EATtB,+BASYE,IATZ,0BAUqBF,EAASK,OAV9B,QAUQC,EAVR,OAWIT,EAAWS,GACXV,EAAY,IACZK,QAAQC,IAAII,GAbhB,wBAgBIL,QAAQC,IAAI,eACZK,MAAM,8CACNX,EAAY,IAlBhB,6CA9C4B,sBAwE5B,OACE,gCACE,sBAAKX,UAAU,MAAf,UACE,oBAAIuB,MAAM,UAAV,yBACA,sBAAKvB,UAAU,SAAf,UACE,uBACEwB,KAAK,OACLxB,UAAU,aACVyB,YAAY,oBACZC,SAAU,SAACC,GAAD,OAAOhB,EAAYgB,EAAEC,OAAOC,QACtCA,MAAOnB,IAET,wBAAQoB,QA/CM,WACH,KAAbpB,GACFY,MAAM,yBACNX,EAAY,KAxCY,mCA0CxBoB,IA0CI,uBAEsB,oBAAhB3B,EAAQ4B,KACd,8BACE,qBAAKhC,UAAU,eAAf,SACE,cAACF,EAAD,CACEO,aAtBiBG,EAsBkBJ,EAAQ4B,KAAKC,KArBrDC,KAAKC,MAAiC,GAAzB3B,EAAe,QAAe,EAAI,KAsB1CJ,QAASA,EAAQA,QAAQ,GAAG4B,KAC5B7B,YA3FI,SAACiC,GACjB,IAwBIC,EAVO,CACT,SACA,SACA,UACA,YACA,WACA,SACA,YAGaD,EAAEE,UACbC,EAAOH,EAAEI,UACTC,EA1BS,CACX,UACA,WACA,QACA,QACA,MACA,OACA,OACA,SACA,YACA,UACA,WACA,YAciBL,EAAEM,YACjBC,EAAOP,EAAEQ,cAEb,MAAM,GAAN,OAAUP,EAAV,YAAiBE,EAAjB,YAAyBE,EAAzB,YAAkCE,GA6DTE,CAAU,IAAIC,MAC3B7C,gBAAiBG,EAAQ2C,KACzB7C,eAAgBE,EAAQ4C,IAAIC,cAKlC,MAGJ,qBAAKjD,UAAU,uBCxGrBkD,IAASC,OAAO,cAAC5C,EAAD,IAAS6C,SAASC,eAAe,W","file":"static/js/main.936aaabc.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./weatherBox.css\";\nimport {\n  FaCloudShowersHeavy,\n  FaCloud,\n  FaSun,\n  FaRegSnowflake,\n  FaQuestion,\n} from \"react-icons/fa\";\n\nexport default function WeatherDescription(props) {\n  return (\n    <div className=\"weather-box\">\n      <div className=\"location\">\n        {props.weatherCityName}, {props.weatherCountry}\n      </div>\n      <div className=\"date\">{props.weatherDate}</div>\n      <div>\n        <div className=\"weatherIconBox\">\n          <div className=\"weatherIcon\">\n            {props.weather == \"Clouds\" ? (\n              <FaCloud />\n            ) : props.weather == \"Haze\" ? (\n              <FaCloud />\n            ) : props.weather == \"Rain\" ? (\n              <FaCloudShowersHeavy />\n            ) : props.weather == \"Clear\" ? (\n              <FaSun />\n            ) : props.weather == \"Snow\" ? (\n              <FaRegSnowflake />\n            ) : (\n              <FaQuestion />\n            )}\n            <div className=\"weather\">{props.weather}</div>\n          </div>\n        </div>\n\n        <div className=\"temp\">{props.weatherTemp}Â°f</div>\n      </div>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport WeatherDescription from \"./weatherDescription\";\n\nconst weatherAPI = {\n  key: \"d54621adc1eb92e667891cb536f72f93\",\n};\n\nexport default function App() {\n  const buildDate = (d) => {\n    let months = [\n      \"January\",\n      \"February\",\n      \"March\",\n      \"April\",\n      \"May\",\n      \"June\",\n      \"July\",\n      \"August\",\n      \"September\",\n      \"October\",\n      \"November\",\n      \"December\",\n    ];\n    let days = [\n      \"Sunday\",\n      \"Monday\",\n      \"Tuesday\",\n      \"Wednesday\",\n      \"Thursday\",\n      \"Friday\",\n      \"Saturday\",\n    ];\n\n    let day = days[d.getDay()];\n    let date = d.getDate();\n    let month = months[d.getMonth()];\n    let year = d.getFullYear();\n\n    return `${day} ${date} ${month} ${year}`;\n  };\n  const [cityName, setCityName] = useState(\"\");\n\n  const [weather, setWeather] = useState(\"\");\n\n  const submitWeather = () => {\n    if (cityName === \"\") {\n      alert(\"Enter City Name First\");\n      setCityName(\"\");\n    } else {\n      fetchWeather();\n    }\n  };\n\n  async function fetchWeather() {\n    let response = await fetch(\n      `https://api.openweathermap.org/data/2.5/weather?q=${cityName}&appid=${weatherAPI.key}`\n    );\n\n    console.log(response.status); // 200\n    console.log(response.statusText); // OK\n\n    if (response.status === 200) {\n      console.log(await response);\n      let data = await response.json();\n      setWeather(data);\n      setCityName(\"\");\n      console.log(data);\n      // handle data\n    } else {\n      console.log(\"is catching\");\n      alert(\"Invalid City Name... Enter Valid City Name\");\n      setCityName(\"\");\n    }\n  }\n\n  function calculateWeatherFaren(temperatureK) {\n    return Math.round(((temperatureK - 273.15) * 9) / 5 + 32);\n  }\n\n  return (\n    <div>\n      <div className=\"top\">\n        <h1 class=\"heading\">Weather App</h1>\n        <div className=\"search\">\n          <input\n            type=\"text\"\n            className=\"search-bar\"\n            placeholder=\"Search for a city\"\n            onChange={(e) => setCityName(e.target.value)}\n            value={cityName}\n          />\n          <button onClick={submitWeather}>Submit</button>\n        </div>\n        {typeof weather.main != \"undefined\" ? (\n          <div>\n            <div className=\"location-box\">\n              <WeatherDescription\n                weatherTemp={calculateWeatherFaren(weather.main.temp)}\n                weather={weather.weather[0].main}\n                weatherDate={buildDate(new Date())}\n                weatherCityName={weather.name}\n                weatherCountry={weather.sys.country}\n              />\n            </div>\n          </div>\n        ) : (\n          \"\"\n        )}\n      </div>\n      <div className=\"current-weather\"></div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}